# Cmake file for common/agc

add_sources (SOURCES
	src/RxAgcNull.cpp
	src/RxAgc.cpp
)


## Cppcheck
include (cppcheck)
addCppcheck(agc)

#if ( (${TARGET} STREQUAL "x86_64") AND (${BUILD_TEST_SHARED}) )
if ( (${TARGET} STREQUAL "x86_64") )

    addRepoLib(libs xcommon)
    addRepoLib(libs common)
    
    ## Uses tinyxml2
    addRosLib( libs  tinyxml2 )

	# Load google test
#	include (gtest)

    addTestCommon(TEST_COMMON common)
	addTestCommon(TEST_HW_COMMON hardware)

	include_directories(gtest)
	set(gtest_src
		gtest/RxAgc_unittest.cpp
		gtest/tests.cpp

		# Test mocks
		${TEST_HW_COMMON}/TestFpgaKernel.cpp
        ${TEST_HW_COMMON}/TestFpgaMock.cpp        
        ${TEST_HW_COMMON}/TestTxFreqConstFactory.cpp
        ${TEST_HW_COMMON}/TestRxFreqConstFactory.cpp
        ${TEST_HW_COMMON}/TestCommonDevices.cpp
        ${TEST_HW_COMMON}/TestCommonAttenuator.cpp
        ${TEST_HW_COMMON}/TestCommonRefClock.cpp
        ${TEST_HW_COMMON}/TestCommonSynth.cpp
        ${TEST_HW_COMMON}/TestCommonRadio.cpp
        ${TEST_HW_COMMON}/TestCommonAttenuator.cpp        
        ${TEST_HW_COMMON}/TestCommonRadioInfoSingleton.cpp
        ${TEST_HW_COMMON}/TestCommonRadioFactories.cpp
        ${TEST_HW_COMMON}/TestCommonRxPortSingleton.cpp
        ${TEST_HW_COMMON}/TestCommonSRxPortSingleton.cpp
        ${TEST_HW_COMMON}/TestCommonTxPortSingleton.cpp
        ${TEST_HW_COMMON}/TestCalDataSingleton.cpp
        ${TEST_HW_COMMON}/TestCalData.cpp
        ${TEST_HW_COMMON}/TestCommonCpriSingleton.cpp
        ${TEST_HW_COMMON}/TestBus.cpp
        ${TEST_HW_COMMON}/TestCommonCarrierSingleton.cpp
        ${TEST_HW_COMMON}/TestCommonModules.cpp
        ${TEST_HW_COMMON}/TestRadioPostInit.cpp
        ${TEST_HW_COMMON}/TestCommonCarrierServer.cpp
        ${TEST_HW_COMMON}/TestCommonCarrierServerSingleton.cpp
        ${TEST_HW_COMMON}/TestIRfConstFactory.cpp
	    ${TEST_COMMON}/TestIloggerFactory.cpp
        ${TEST_COMMON}/BootEnvSingleton.cpp
	)
#	addGtest(agc_GTEST "${libs}" ${gtest_src})
	
	# Add code coverage
	include (coverage)
	addCoverage(agc_GTEST)

	# Add memory leak check
	include (valgrind)
	addMemcheck(agc_GTEST)


endif ( (${TARGET} STREQUAL "x86_64") )

